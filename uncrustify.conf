newlines = LF
indent_with_tabs = 1
input_tab_size = 2
output_tab_size = 2
indent_columns = output_tab_size
indent_class = true

nl_assign_brace			= remove		# "= {" vs "= \n {"
nl_enum_brace			= remove		# "enum {" vs "enum \n {"
nl_union_brace			= remove		# "union {" vs "union \n {"
nl_struct_brace			= remove		# "struct {" vs "struct \n {"
nl_do_brace			= remove		# "do {" vs "do \n {"
nl_if_brace			= remove		# "if () {" vs "if () \n {"
nl_for_brace			= remove		# "for () {" vs "for () \n {"
nl_else_brace			= remove		# "else {" vs "else \n {"
nl_while_brace			= remove		# "while () {" vs "while () \n {"
nl_switch_brace			= remove		# "switch () {" vs "switch () \n {"
nl_before_case			= 1
nl_fcall_brace			= remove		# "foo() {" vs "foo()\n{"
nl_fdef_brace			= remove		# "int foo() {" vs "int foo()\n{"
nl_after_return			= TRUE
nl_brace_while			= remove
nl_brace_else			= remove
nl_squeeze_ifdef		= TRUE
nl_namespace_brace = remove
nl_class_brace = remove

sp_after_sparen = force
sp_before_sparen = add
sp_func_def_paren = remove
sp_func_proto_paren = remove
sp_func_call_paren = remove

mod_paren_on_return = remove
mod_full_brace_if = add
mod_full_brace_for = add
mod_full_brace_do = add
mod_full_brace_while = add
